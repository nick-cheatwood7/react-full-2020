{"ast":null,"code":"var _jsxFileName = \"/Users/nickcheatwood/Desktop/react-advanced-2020/src/tutorial/12-memo-useMemo-useCallback/setup/index.js\";\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useFetch } from '../../9-custom-hooks/final/2-useFetch'; // ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\n\nconst url = 'https://course-api.com/javascript-store-products'; // every time props or state changes, component re-renders\n\nconst calculateMostExpensive = data => {\n  return data.reduce((total, item) => {\n    const price = item.fields.price;\n\n    if (price >= total) {\n      total = price;\n    }\n\n    return total;\n  }, 0) / 100;\n};\n\nconst Index = () => {\n  const {\n    products\n  } = useFetch(url);\n  const [count, setCount] = useState(0);\n  const [cart, setCart] = useState(0);\n  const addToCart = useCallback(() => {\n    setCart(cart + 1);\n  }, [cart]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Count : \", count), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"click me\"), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      marginTop: \"3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"cart: \", cart), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Most Expensive : $\", calculateMostExpensive(products)), /*#__PURE__*/React.createElement(BigList, {\n    products: products,\n    addToCart: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst BigList = React.memo(({\n  products,\n  addToCart\n}) => {\n  useEffect(() => {\n    console.log('Big list called');\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, products.map(product => {\n    return /*#__PURE__*/React.createElement(SingleProduct, Object.assign({\n      key: product.id\n    }, product, {\n      addToCart: addToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    }));\n  }));\n});\n\nconst SingleProduct = ({\n  fields,\n  addToCart\n}) => {\n  useEffect(() => {\n    console.count('Single item called');\n  });\n  let {\n    name,\n    price\n  } = fields;\n  price = price / 100;\n  const image = fields.image[0].url;\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"$\", price), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"add to cart\"));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/nickcheatwood/Desktop/react-advanced-2020/src/tutorial/12-memo-useMemo-useCallback/setup/index.js"],"names":["React","useState","useEffect","useCallback","useMemo","useFetch","url","calculateMostExpensive","data","reduce","total","item","price","fields","Index","products","count","setCount","cart","setCart","addToCart","marginTop","BigList","memo","console","log","map","product","id","SingleProduct","name","image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useFetch } from '../../9-custom-hooks/final/2-useFetch'\n\n// ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\nconst url = 'https://course-api.com/javascript-store-products'\n\n// every time props or state changes, component re-renders\n\nconst calculateMostExpensive = (data) => {\n  return data.reduce((total, item) => {\n    const price = item.fields.price\n    if (price >= total) {\n      total = price\n    }\n    return total\n  },0) /100\n}\n\nconst Index = () => {\n  const { products } = useFetch(url)\n  const [count, setCount] = useState(0)\n  const [cart, setCart] = useState(0)\n\n  const addToCart = useCallback(() => {\n    setCart(cart + 1)\n  },[cart])\n\n  return (\n    <>\n      <h1>Count : {count}</h1>\n      <button className='btn' onClick={() => setCount(count + 1)}>\n        click me\n      </button>\n      <h1 style={{ marginTop: \"3rem\" }}>cart: {cart}</h1>\n      <h1>Most Expensive : ${calculateMostExpensive(products)}</h1>\n      <BigList products={products} addToCart={addToCart}/>\n    </>\n  )\n}\n\nconst BigList = React.memo(({ products, addToCart }) => {\n  useEffect(() => {\n    console.log('Big list called')\n  })\n  return (\n    <section className='products'>\n      {products.map((product) => {\n        return <SingleProduct\n          key={product.id}\n          {...product}\n          addToCart={addToCart}>\n          </SingleProduct>\n      })}\n    </section>\n  )\n}\n)\n\nconst SingleProduct = ({ fields, addToCart }) => {\n  useEffect(() => {\n    console.count('Single item called')\n  })\n  let { name, price } = fields\n  price = price / 100\n  const image = fields.image[0].url\n\n  return (\n    <article className='product'>\n      <img src={image} alt={name} />\n      <h4>{name}</h4>\n      <p>${price}</p>\n      <button onClick={addToCart}>add to cart</button>\n    </article>\n  )\n}\nexport default Index\n"]},"metadata":{},"sourceType":"module"}